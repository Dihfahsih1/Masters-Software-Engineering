#lang racket
;qtn 1
(define colors
  (vector "red" "orange" "yellow" "green" "blue" "indigo" "violet"))

(define (length-of-vector-elements vct)
  (vector-map string-length vct))

(length-of-vector-elements colors)

;Qtn 2
(define (zero-vector len)
  (make-vector len 0))

(define (append-zeros vec max-len)
  (vector-append vec (zero-vector (- max-len (vector-length vec)))))

(define (sum-vector v1 v2)
  (let ((max-len (max (vector-length v1)
                      (vector-length v2))))
    (vector-map +
                (append-zeros v1 max-len)
                (append-zeros v2 max-len))))

(sum-vector (vector 4 6 8 3) (vector 5 6 7))



;Qtn 3a
(vector-map (lambda (x) (* x x)) (vector 1 2 3 4))

;qtn 3b
(define (vector-for-each proc vec)
(for ([color vec])
  (display (string-append "\"" color "\"")) 
  ))

(vector-for-each display (vector "red" "orange"))
 

